{"version":3,"file":"index.js","sources":["../src/utils.ts","../src/useStorageState.ts","../src/altStorageState.ts","../src/cacheStorage.ts","../src/index.ts"],"sourcesContent":["export function isFunction<T>(obj: any): obj is T {\n  return typeof obj === 'function'\n}\n","import { useState, useEffect, useRef } from 'react'\nimport { isFunction } from './utils'\n\nimport {\n  IFuncUpdater,\n  TStorageStateDefaultValue,\n  TStorageStateResult\n} from './types'\n\nfunction useStorageState<T>(storage: Storage, key: string, defaultValue?: TStorageStateDefaultValue<T>): TStorageStateResult<T> {\n  const isMounted = useRef(false)\n  const [state, setState] = useState<T | undefined>(() => getStoredValue())\n\n  useEffect(() => {\n    if (!isMounted.current) {\n      isMounted.current = true\n      return\n    }\n    setState(getStoredValue())\n  }, [key])\n\n  function getStoredValue() {\n    const raw = storage.getItem(key)\n    if (raw) {\n      try {\n        return JSON.parse(raw)\n      } catch (e) { }\n    }\n    if (isFunction<IFuncUpdater<T>>(defaultValue)) {\n      return defaultValue()\n    }\n    return defaultValue\n  }\n\n  function updateState(value?: T | IFuncUpdater<T>) {\n    if (isFunction<IFuncUpdater<T>>(value)) {\n      const previousState = getStoredValue()\n      const currentState = value(previousState)\n      storage.setItem(key, JSON.stringify(currentState))\n      setState(currentState)\n    } else {\n      storage.setItem(key, JSON.stringify(value))\n      setState(value)\n    }\n  }\n\n  function deleteState() {\n    setState(undefined)\n    storage.removeItem(key)\n  }\n\n  return [state, updateState, deleteState]\n}\n\nexport default useStorageState\n","import { isFunction } from './utils'\n\nimport {\n  IFuncUpdater,\n  TStorageStateDefaultValue,\n  TStorageStateResult\n} from './types'\n\nfunction altStorageState<T>(storage: Storage, key: string, defaultValue?: TStorageStateDefaultValue<T>): TStorageStateResult<T> {\n\n  function getStoredValue() {\n    const raw = storage.getItem(key)\n    if (raw) {\n      try {\n        return JSON.parse(raw)\n      } catch (e) { }\n    }\n    if (isFunction<IFuncUpdater<T>>(defaultValue)) {\n      return defaultValue()\n    }\n    return defaultValue\n  }\n\n  function updateState(value?: T | IFuncUpdater<T>) {\n    if (isFunction<IFuncUpdater<T>>(value)) {\n      const previousState = getStoredValue()\n      const currentState = value(previousState)\n      storage.setItem(key, JSON.stringify(currentState))\n    } else {\n      storage.setItem(key, JSON.stringify(value))\n    }\n  }\n\n  function deleteState() {\n    storage.removeItem(key)\n  }\n\n  const state = getStoredValue()\n\n  return [state, updateState, deleteState]\n}\n\nexport default altStorageState\n","class MapStorage {\n  private storage = new Map()\n\n  length = 0\n\n  getItem(key: string) {\n    return this.storage.has(key) && this.storage.get(key)\n  }\n\n  setItem(key: string, value: any) {\n    this.storage.set(key, value)\n    this.updateLength()\n  }\n\n  removeItem(key: string) {\n    this.storage.delete(key)\n    this.updateLength()\n  }\n\n  clear() {\n    this.storage.clear()\n    this.updateLength()\n  }\n\n  updateLength() {\n    this.length = this.storage.size\n  }\n\n  key(index: number) {\n    const keys = this.storage.keys()\n    let key: string | null = null\n    if (index > this.storage.size) {\n      return key\n    }\n    for (let i = 0; i < this.storage.size; i++) {\n      const result = keys.next()\n      if (i === index) {\n        key = result.value\n        break\n      }\n    }\n    return key\n  }\n\n}\n\nexport default new MapStorage()\n","/* eslint-disable indent */\nimport useStorageState from './useStorageState'\nimport altStorageState from './altStorageState'\nimport cache from './cacheStorage'\n\n// hooks场景 - 使用localStorage缓存\nexport function useLocalStorageState<T>(key: string, defaultValue?: T | (() => T)) {\n  return useStorageState(localStorage, key, defaultValue)\n}\n// 非hooks场景 - 使用localStorage缓存\nexport function altLocalStorageState<T>(key: string, defaultValue?: T | (() => T)) {\n  return altStorageState(localStorage, key, defaultValue)\n}\n\n// hooks场景 - 使用sessionStorage缓存\nexport function useSessionStorageState<T>(key: string, defaultValue?: T | (() => T)) {\n  return useStorageState(sessionStorage, key, defaultValue)\n}\n// 非hooks场景 - 使用sessionStorage缓存\nexport function altSessionStorageState<T>(key: string, defaultValue?: T | (() => T)) {\n  return altStorageState(sessionStorage, key, defaultValue)\n}\n\n// hooks场景 - 使用自定义缓存[map]\nexport function usecacheStorageState<T>(key: string, defaultValue?: T | (() => T)) {\n  return useStorageState(cache, key, defaultValue)\n}\n// 非hooks场景 - 使用自定义缓存[map]\nexport function altCacheStorageState<T>(key: string, defaultValue?: T | (() => T)) {\n  return altStorageState(cache, key, defaultValue)\n}\n\n// 导出默认的缓存方法\nexport default {\n  useStorageState,\n  altStorageState\n}\n"],"names":["isFunction","obj","useStorageState","storage","key","defaultValue","isMounted","useRef","_a","useState","getStoredValue","state","setState","raw","getItem","JSON","parse","e","useEffect","current","value","currentState","setItem","stringify","undefined","removeItem","altStorageState","Map","MapStorage","this","has","get","set","updateLength","delete","clear","length","size","index","keys","i","result","next","useLocalStorageState","localStorage","altLocalStorageState","useSessionStorageState","sessionStorage","altSessionStorageState","usecacheStorageState","cache","altCacheStorageState"],"mappings":"qEAAgBA,EAAcC,SACN,mBAARA,ECQhB,SAASC,EAAmBC,EAAkBC,EAAaC,OACnDC,EAAYC,GAAO,GACnBC,EAAoBC,GAAwB,kBAAMC,OAAjDC,OAAOC,gBAULF,QACDG,EAAMV,EAAQW,QAAQV,MACxBS,aAEOE,KAAKC,MAAMH,GAClB,MAAOI,WAEPjB,EAA4BK,GACvBA,IAEFA,SAlBTa,GAAU,WACHZ,EAAUa,QAIfP,EAASF,KAHPJ,EAAUa,SAAU,IAIrB,CAACf,IAgCG,CAACO,WAjBaS,MACfpB,EAA4BoB,GAAQ,KAEhCC,EAAeD,EADCV,KAEtBP,EAAQmB,QAAQlB,EAAKW,KAAKQ,UAAUF,IACpCT,EAASS,QAETlB,EAAQmB,QAAQlB,EAAKW,KAAKQ,UAAUH,IACpCR,EAASQ,eAKXR,OAASY,GACTrB,EAAQsB,WAAWrB,KCxCvB,SAASsB,EAAmBvB,EAAkBC,EAAaC,YAEhDK,QACDG,EAAMV,EAAQW,QAAQV,MACxBS,aAEOE,KAAKC,MAAMH,GAClB,MAAOI,WAEPjB,EAA4BK,GACvBA,IAEFA,QAmBF,CAFOK,aAdOU,MACfpB,EAA4BoB,GAAQ,KAEhCC,EAAeD,EADCV,KAEtBP,EAAQmB,QAAQlB,EAAKW,KAAKQ,UAAUF,SAEpClB,EAAQmB,QAAQlB,EAAKW,KAAKQ,UAAUH,gBAKtCjB,EAAQsB,WAAWrB,KClCvB,MA8Ce,yCA7CK,IAAIuB,gBAEb,SAETC,oBAAA,SAAQxB,UACCyB,KAAK1B,QAAQ2B,IAAI1B,IAAQyB,KAAK1B,QAAQ4B,IAAI3B,IAGnDwB,oBAAA,SAAQxB,EAAagB,QACdjB,QAAQ6B,IAAI5B,EAAKgB,QACjBa,gBAGPL,uBAAA,SAAWxB,QACJD,QAAQ+B,OAAO9B,QACf6B,gBAGPL,kBAAA,gBACOzB,QAAQgC,aACRF,gBAGPL,yBAAA,gBACOQ,OAASP,KAAK1B,QAAQkC,MAG7BT,gBAAA,SAAIU,OACIC,EAAOV,KAAK1B,QAAQoC,OACtBnC,EAAqB,QACrBkC,EAAQT,KAAK1B,QAAQkC,YAChBjC,MAEJ,IAAIoC,EAAI,EAAGA,EAAIX,KAAK1B,QAAQkC,KAAMG,IAAK,KACpCC,EAASF,EAAKG,UAChBF,IAAMF,EAAO,CACflC,EAAMqC,EAAOrB,oBAIVhB,kBCnCKuC,EAAwBvC,EAAaC,UAC5CH,EAAgB0C,aAAcxC,EAAKC,YAG5BwC,EAAwBzC,EAAaC,UAC5CqB,EAAgBkB,aAAcxC,EAAKC,YAI5ByC,EAA0B1C,EAAaC,UAC9CH,EAAgB6C,eAAgB3C,EAAKC,YAG9B2C,EAA0B5C,EAAaC,UAC9CqB,EAAgBqB,eAAgB3C,EAAKC,YAI9B4C,EAAwB7C,EAAaC,UAC5CH,EAAgBgD,EAAO9C,EAAKC,YAGrB8C,EAAwB/C,EAAaC,UAC5CqB,EAAgBwB,EAAO9C,EAAKC,GAIrC,MAAe,CACbH,kBACAwB"}